<?xml version="1.0"?>
<launch>

    <arg name="joystick" default="true" doc="joystick at teleop station"/>
    <arg name="joy_dev" default="$(optenv HUSKY_JOY_DEVICE /dev/input/js0)" />
    <arg name="kinova_joy" default="true" />
    <arg name="navigation" default="false"/>
    <arg name="manipulation" default="false"/>
    <arg name="mobile_teleop" default="false"/>
    <arg name="viz" default="true"/>
    
    <arg name="rviz_config" value="mapping.rviz" unless="$(arg manipulation)"/>
    <arg name="rviz_config" value="mobile_manipulation.rviz" if="$(arg manipulation)"/>

    <!--Participant id-->
    <arg name="id" default="0"/>

    <!--arg waypoint = true (waypoint) or false(direct)-->
    <arg name="waypoint" default="true"/>
    <arg name="control" value="direct" unless="$(arg waypoint)"/>
    <arg name="control" value="waypoint" if="$(arg waypoint)"/>

    <!--arg vr = true (vr) or false (screen)-->
    <arg name="vr" default="true"/>
    <arg name="interface" value="screen" unless="$(arg vr)"/>
    <arg name="interface" value="vr" if="$(arg vr)"/>

    <arg name="tutorial" default="true"/>
    <arg name="record" value="true" unless="$(arg tutorial)"/>
    <arg name="record" value="false" if="$(arg tutorial)"/>

    <!--Use only if trial is interrupted part way through and you want to keep the videos from the previous sections-->
    <arg name="part" default="1"/>

    <!-- Navigation and Mapping-->
    <group if="$(arg navigation)">
      <include file="$(find husky_navigation)/launch/gmapping_demo.launch"/>
      <!-- <include file="$(find move_basic)/launch/move_basic.launch"/> -->
      <node name="move_distance_server" pkg="husky_custom_actions" type="move_distance_server.py"/>
      <node name="turn_robot_server" pkg="husky_custom_actions" type="turn_robot_server.py"/>
      <node name="odom_navigation_server" pkg="husky_custom_actions" type="odom_navigation_server.py"/>
    </group>

    <!-- Manipulation-->
    <group if="$(arg manipulation)">
      <include file="$(find husky_custom_moveit_config)/launch/husky_gen3_moveit_planning_execution.launch"/>
      <include file="$(find husky_gen3_moveit_interface)/launch/move_group_python_interface.launch"/>
      <include file="$(find kinova_custom_actions)/launch/kinova_place_object_server.launch"/>
    </group>

    <!-- Visulisation-->
    <group if="$(arg viz)">
      <include file="$(find husky_viz)/launch/view_robot.launch">
        <arg name="config" value="$(arg rviz_config)"/>
      </include>
    </group>

    <!-- Husky teleop on secondary joystick -->
    <group if="$(arg mobile_teleop)"/>
      <group ns="joy_teleop_desktop">
        <rosparam command="load" file="$(find husky_desktop_custom)/config/teleop_logitech.yaml" />
        <param name="joy_node/dev" value="$(arg joy_dev)" />
        <node pkg="joy" type="joy_node" name="joy_node" />
        <node pkg="teleop_twist_joy" type="teleop_node" name="teleop_twist_joy"/>
      </group>
    </group>

    <!-- Kinova teleop on master controller-->
    <group if="$(arg kinova_joy)">
      <node name="kinova_joy_teleop" type="kinova_joy_teleop.py" pkg="kinova_joy_teleop">
        <param name="restricted_mode" value="false"/>
        <param name="arm_ns" value="/kinova_arm"/>
        <param name="joy_topic" value="/joy_teleop/joy"/>
      </node>
    </group>

    <group if="$(arg record)">
      <include file="$(find husky_desktop_custom)/launch/cv_cam.launch">
        <arg name="device_id" value="0"/>
        <arg name="camera_name" value="cam1"/>
        <arg name="width" value="1920"/>
        <arg name="height" value="1080"/>
        <arg name="framerate" value="30"/>
      </include>
      <include file="$(find husky_desktop_custom)/launch/cv_cam.launch">
        <arg name="device_id" value="2"/>
        <arg name="camera_name" value="cam2"/>
        <arg name="width" value="1920"/>
        <arg name="height" value="1080"/>
        <arg name="framerate" value="30"/>
      </include>
      <include file="$(find husky_desktop_custom)/launch/cv_cam.launch">
        <arg name="device_id" value="4"/>
        <arg name="camera_name" value="cam3"/>
        <arg name="width" value="1280"/>
        <arg name="height" value="720"/>
        <arg name="framerate" value="30"/>
      </include>


      <node pkg="image_view" type="video_recorder" name="cam1_recorder" args="image:=/cam1/image_raw">
        <param name="filename" value="$(env HOME)/MR_Experiment_Data_2/id_$(arg id)/$(arg control)_$(arg interface)/id_$(arg id)_$(arg control)_$(arg interface)_$(arg part)_cam1.avi"/>
      </node>
      <node pkg="image_view" type="video_recorder" name="cam2_recorder" args="image:=/cam2/image_raw">
        <param name="filename" value="$(env HOME)/MR_Experiment_Data_2/id_$(arg id)/$(arg control)_$(arg interface)/id_$(arg id)_$(arg control)_$(arg interface)_$(arg part)_cam2.avi"/>
      </node>
      <node pkg="image_view" type="video_recorder" name="cam3_recorder" args="image:=/cam3/image_raw">
        <param name="filename" value="$(env HOME)/MR_Experiment_Data_2/id_$(arg id)/$(arg control)_$(arg interface)/id_$(arg id)_$(arg control)_$(arg interface)_$(arg part)_cam3.avi"/>
      </node>

      <node pkg="rosbag" type="record" name="rosbag_record_node"
        args="record 
        -o $(env HOME)/MR_Experiment_Data_2/id_$(arg id)/$(arg control)_$(arg interface)/id_$(arg id)_$(arg control)_$(arg part)
        /rosout 
        /tf 
        /odometry/filtered 
        /joint_states 
        /scan_filtered 
        /map 
        /cmd_vel 
        /joy_teleop_desktop/joy
        /pan_tilt_angle 
        /move_base/local_costmap/costmap
        /move_base/global_costmap/costmap
        /move_base/current_goal
        /move_base/GlobalPlanner/plan
        /move_base/DWAPlannerROS/local_plan
        /turn_robot_server/goal
        /move_distance_server/goal
        /kinova_pick_object_server/goal
        /kinova_place_object_server/goal
        /kinova_moveit_cartesian_goal
        /kinova_moveit_joint_goal
        /kinova_arm/in/cartesian_velocity
        "/>
    </group>

</launch>